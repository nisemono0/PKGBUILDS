diff --git a/src/transformers_ocr.py b/src/transformers_ocr.py
index 1cc0dd6..a919db6 100755
--- a/src/transformers_ocr.py
+++ b/src/transformers_ocr.py
@@ -124,6 +124,20 @@ def maim_select(screenshot_path: str):
         stderr=sys.stdout,
     )
 
+def scrot_select(screenshot_path: str, freeze: bool):
+    raise_if_missing("scrot")
+    if freeze:
+        return subprocess.run(
+            ("scrot", "-s", "-f", "-l", "mode=classic,width=2,color=white", "--overwrite", "--format", "png", "--compression", "1", screenshot_path,),
+            check=True,
+            stderr=sys.stdout,
+        )
+    else:
+        return subprocess.run(
+            ("scrot", "-s", "-l", "mode=edge,width=2,color=white", "--overwrite", "--format", "png", "--compression", "1", screenshot_path,),
+            check=True,
+            stderr=sys.stdout,
+        )
 
 def grim_select(screenshot_path: str):
     raise_if_missing("grim", "slurp")
@@ -133,14 +147,19 @@ def grim_select(screenshot_path: str):
     )
 
 
-def take_screenshot(screenshot_path):
+def take_screenshot(screenshot_path, freeze):
     match CURRENT_PLATFORM:
         case Platform.GNOME:
             gnome_screenshot_select(screenshot_path)
         case Platform.KDE:
             spectactle_select(screenshot_path)
         case Platform.Xorg:
-            maim_select(screenshot_path)
+            if is_installed("scrot"):
+                scrot_select(screenshot_path, freeze)
+            elif is_installed("maim"):
+                maim_select(screenshot_path)
+            else:
+                raise MissingProgram("You need maim or scrot installed")
         case Platform.Wayland:
             grim_select(screenshot_path)
 
@@ -152,11 +171,11 @@ def prepare_pipe():
         os.mkfifo(PIPE_PATH)
 
 
-def run_ocr(command):
+def run_ocr(command, args):
     ensure_listening()
     with tempfile.NamedTemporaryFile(suffix=".png", delete=False) as screenshot_file:
         try:
-            take_screenshot(screenshot_file.name)
+            take_screenshot(screenshot_file.name, args.freeze)
         except subprocess.CalledProcessError as ex:
             raise ScreenshotCancelled() from ex
         with open(PIPE_PATH, "w") as pipe:
@@ -424,10 +443,12 @@ You need to run '{prog_name()} download' once after installation.
     subparsers = parser.add_subparsers(title="commands")
 
     recognize_parser = subparsers.add_parser("recognize", help="OCR a part of the screen.", aliases=["ocr"])
-    recognize_parser.set_defaults(func=lambda _args: run_ocr("recognize"))
+    recognize_parser.add_argument("--freeze", "-f", help="Freeze the screen when selecting text (scrot only)", default=False, action="store_true")
+    recognize_parser.set_defaults(func=lambda args: run_ocr("recognize", args))
 
     hold_parser = subparsers.add_parser("hold", help="OCR and hold a part of the screen.")
-    hold_parser.set_defaults(func=lambda _args: run_ocr("hold"))
+    hold_parser.add_argument("--freeze", "-f", help="Freeze the screen when selecting text (scrot only)", default=False, action="store_true")
+    hold_parser.set_defaults(func=lambda args: run_ocr("hold", args))
 
     download_parser = subparsers.add_parser("download", help="Download OCR files.")
     download_parser.set_defaults(func=lambda _args: download_manga_ocr())
